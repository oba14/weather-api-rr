{"version":3,"sources":["reducers/hourlyTemp.js","reducers/temp.js","reducers/rootReducer.js","actions/temp.js","actions/hourlyTemp.js","components/CitySearch.js","components/HourlyTemp.js","components/pages/LandingPage.js","components/Navbar.js","components/pages/NotFound.js","components/pages/About.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["initialState","hourlyTemp","nearbyTemp","temp","citySearched","rootReducer","combineReducers","state","action","type","payload","axios","require","lat","lon","dispatch","get","then","data","catch","e","CitySearch","useState","cityName","setCityName","useDispatch","className","id","onChange","target","value","placeholder","name","required","onClick","findCityTemp","style","visibility","href","HourlyTemp","useSelector","useEffect","citySearch","console","log","list","scope","map","timeStamp","index","key","dt_txt","Math","floor","main","weather","wind","speed","LandingPage","props","nearByLat","setNearByLat","nearByLong","setNearByLong","navigator","geolocation","getCurrentPosition","getNearbyCoordinates","toast","error","putDataInDom","getNearbyData","position","coords","latitude","longitude","document","querySelector","innerHTML","marginTop","role","aria-label","src","alt","width","height","Navbar","exact","activeClassName","to","NotFound","display","Navigation","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","path","component","About","App","basename","window","location","pathname","Boolean","hostname","match","store","createStore","undefined","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7fa14cd.chunk.js","sourcesContent":["const initialState = {\n    hourlyTemp: null\n}\n\nexport default (state= initialState, action) => {\n   //const { hourlyTempp } = action.payload;\n\n   switch(action.type) {\n       case 'HOURLY_TEMP': \n       return {...state,\n        hourlyTemp: action.payload\n       }\n       default:\n           return state\n   }\n}","const initialState = {\n    nearbyTemp: null,\n    temp: null,\n    citySearched: ''\n}\n\nexport default (state= initialState, action) => {\n   //const { temp } = action.payload;\n    \n   switch(action.type) {\n       case 'NEARBY_TEMP': \n       return {\n           ...state, \n            nearbyTemp: action.payload\n       }\n\n       case 'CITY_SEARCHED':\n        return {\n            ...state, \n             nearbyTemp: action.payload,\n             citySearched: action.citySearched\n        }\n       default:\n           return state\n   }\n}\n","import { combineReducers } from 'redux';\nimport hourlyTemp from './hourlyTemp';\nimport temp from './temp';\n\nconst rootReducer = combineReducers({\n    hourlyTemp,\n    temp\n  });\n  \nexport default rootReducer;","const axios = require('axios');\n\nexport const nearbyTemp= (lat, lon) => dispatch  => {\n        \n    axios.get(`http://localhost:5001/weatherApi/nearby?lat=${lat}&lon=${lon}`)\n        .then(data => {\n            \n            dispatch({\n                type: 'NEARBY_TEMP',\n                payload: data\n            });\n        })\n        .catch(e => {\n            dispatch({\n                type: 'ERROR_FETCHING',\n                payload: e\n            })\n        });\n}\n\nexport const findCityTemp= (cityName) => dispatch  => {\n        \n    \n    axios.get(`http://localhost:5001/weatherApi/search/${cityName}`)\n        .then(data => {\n            \n            dispatch({\n                type: 'CITY_SEARCHED',\n                payload: data,\n                citySearched: cityName\n            });\n        })\n        .catch(e => {\n            dispatch({\n                type: 'ERROR_FETCHING',\n                payload: e\n            })\n        });\n}","const axios = require('axios');\n\nexport const hourlyTemp = (citySearch) => dispatch  => {\n\n    console.log('ACTIONS hOURLY TMEP', citySearch);\n    \n    \n    axios.get(`http://localhost:5001/weatherApi/search/city/hourly?city=${citySearch}`)\n        .then(data => {\n            \n            dispatch({\n                type: 'HOURLY_TEMP',\n                payload: data.data.list\n            });\n        })\n        .catch(e => {\n            dispatch({\n                type: 'ERROR_FETCHING',\n                payload: e\n            })\n        });\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {findCityTemp} from '../actions/temp';\nimport { hourlyTemp } from '../actions/hourlyTemp';\n\nconst CitySearch = () => {\n\n\n    const [cityName, setCityName] = useState('');\n    const dispatch = useDispatch();\n\n    const onValueChange = (e) => {\n        setCityName(e.target.value);\n    }\n\n    const onCityTempSubmit = () => {\n\n        \n        dispatch(findCityTemp(cityName))\n    }\n    return (\n        <div className=\"search-city\">\n            <input id=\"search-city\" onChange={onValueChange} type=\"search\" placeholder=\"Enter City\" name=\"q\" required />\n            <input className=\"btn1\" id=\"search-city-button\" type=\"submit\" placeholder=\"Search City\" name=\"q\" onClick={onCityTempSubmit} />\n            <input className=\"btn1\" id=\"search-city-hourly-button\" type=\"submit\" placeholder=\"Search City\" name=\"q\"\n                value=\"Hourly\" />\n            <input className=\"btn1 line-graph\" type=\"submit\" name=\"q\" value=\"Graph\" style={{visibility: 'hidden'}} />\n            <a className=\"nav-item nav-link\" href=\"#graphs\">Graphs Div</a>\n        </div>\n    )\n}\n\nexport default CitySearch;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hourlyTemp } from '../actions/hourlyTemp';\n\nconst HourlyTemp = () => {\n\n    const citySearched = useSelector(state => state.temp.citySearched);\n    const data = useSelector(state => state.hourlyTemp.hourlyTemp);\n    \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(citySearched) {\n            dispatch(hourlyTemp(citySearched))\n        }\n    }, [citySearched])\n\n    useEffect(() => {\n\n    },[data])\n\n\n\n    return (\n        <>\n        {data && (\n        <div className=\"col-md-6 table-div\">\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Temp</th>\n                        <th scope=\"col\">Weather</th>\n                        <th scope=\"col\">Wind m/s</th>\n                    </tr>\n                    </thead>\n                    <tbody id=\"d1\">\n                   {data.map((timeStamp, index) => \n                             <tr key={index}> \n                                <td>{timeStamp.dt_txt}</td>\n                                <td>{Math.floor(timeStamp.main.temp)}</td>\n                                <td>{timeStamp.weather[0].main}</td>\n                                <td>{timeStamp.wind.speed}</td>\n                            </tr>\n                   )}\n                    </tbody>\n                </table>\n            </div>\n            \n        </div>\n        )}\n        </>\n    )\n}\n\nexport default HourlyTemp;","import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { toast } from 'react-toastify';\nimport './LandingPage.css';\n\nimport { nearbyTemp } from '../../actions/temp';\nimport CitySearch from '../CitySearch';\nimport HourlyTemp from '../HourlyTemp';\n \nconst LandingPage = (props) => {\n\n    const dispatch = useDispatch();\n    \n    const [nearByLat, setNearByLat] = useState(null);\n    const [nearByLong, setNearByLong] = useState(null);\n    const ENTER_KEY = 13;\n\n    const data = useSelector(state => state.temp.nearbyTemp);\n    \n    useEffect(()=> {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(getNearbyCoordinates);\n          } else {\n            toast.error('Geolocation is not supported by this browser.');\n          }\n\n    }, [])\n\n    useEffect(()=> {\n        if(nearByLat && nearByLong) {\n            dispatch(nearbyTemp(nearByLat, nearByLong));\n        }\n    },[nearByLong, nearByLat])\n\n    useEffect(() => {\n        if(data) {\n            putDataInDom(data.data)\n        }\n    }, [data])\n\n    const getNearbyData = () => {\n        if(nearByLat && nearByLong) {\n            dispatch(nearbyTemp(nearByLat, nearByLong));\n        }\n    }\n    \n    function getNearbyCoordinates(position) {\n\n        setNearByLat(position.coords.latitude);\n        setNearByLong(position.coords.longitude);  \n    }\n\n    const handleSubmit = event => {\n        if (event.keyCode === ENTER_KEY) {\n            getNearbyData();\n        }\n    };\n\n\n    /**\n     * add content to DOM\n     * @param {*} data \n     */\n    const putDataInDom = (data) => {\n        document.querySelector('#nearby-city').innerHTML = data.name;\n        document.querySelector('#nearby-temp').innerHTML = `${Math.floor(data.main.temp)} °C `;\n        document.querySelector('#weather-icon').innerHTML = `<img src = \"images/${data.weather[0].main}-256.png\"\n            alt = ${data.weather[0].main} > `;\n        document.querySelector('#nearby-weather-type').innerHTML = data.weather[0].main;\n    }\n\n    return (\n        <div>\n            <div className='container' style={{marginTop: '3%'}} >\n                <div className=\"row\">\n                    <div className=\"col-md-4 containers\">\n                        <div className=\"main-title\">\n                            <h1>Weather Api</h1>\n                            <input className=\"btn1\" onClick={getNearbyData} id=\"nearbydata-button\" type=\"submit\" name=\"q\" value=\"Nearby\" />\n                            <span role=\"img\" aria-label=\"Add\">👍</span>\n                        </div>\n                        <div id=\"nearby-weather\">\n                            <span id=\"nearby-city\"></span>\n                            <p id=\"current-date\"></p>\n                            <p id=\"nearby-temp\"></p>\n                                <div id=\"weather-icon\">\n                                    <img src=\"/images/Clear-256.png\" alt=\"rainbow\" />\n                                </div>\n                            <p id=\"nearby-weather-type\"></p>\n\n                        </div>\n                        <h3>Search City</h3>\n                        <CitySearch />\n                        <div>\n                        <ul className=\"hourly-data\"></ul>\n                        </div>\n                    </div>\n                    <HourlyTemp />\n      \n                </div>\n            </div>\n        <div className=\"stats-btns\" style={{visibility: 'hidden'}}>\n            <input className=\"btn1 temperature\" type=\"submit\" name=\"q\" value=\"Temparature\" /> \n            <input className=\"btn1 wind-speed\" type=\"submit\" name=\"q\" value=\"Wind Speed\" /> \n            <input className=\"btn1 humidity\" type=\"submit\" name=\"q\" value=\"Humidity\" /> \n            <input className=\"btn1 pressure\" type=\"submit\" name=\"q\" value=\"Pressure\" /> \n            <input className=\"btn1 hide-table\" type=\"submit\" name=\"q\" value=\"Hide\" /> \n        </div>\n        <div className=\"row graph-div\" id=\"graphs\">\n            <canvas className=\"speed-chart\" width=\"300\" height=\"300\"></canvas>\n        </div>\n    </div>\n      \n)\n}\n\nexport default LandingPage;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n\nconst Navbar = () => {\n\n\n    return (\n      <div >\n        <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark\">\n          <div >\n            <NavLink exact activeClassName=\"active\"\n              to=\"/\"\n              className=\" col s5 black-text\">\n              Home\n            </NavLink>\n          \n            <NavLink exact activeClassName=\"active\"\n              to=\"/chat\"\n              className=\"col s5 center black-text\">\n              About\n            </NavLink> \n          </div>\n        </nav>\n      </div>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\n\nconst NotFound = () => (\n    <h1 style={{display: 'flex'}}>Page Not Found</h1>\n)\n\nexport default NotFound","import React from 'react';\n\nconst NotFound = () => (\n    <h1 style={{display: 'flex'}}>About</h1>\n)\n\nexport default NotFound","import React, { useEffect } from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom';\n// Components\nimport LandingPage from './pages/LandingPage';\nimport Navbar from './Navbar'\nimport NotFound from './pages/NotFound';\nimport About from './pages/About'\nimport { ToastContainer} from 'react-toastify';\n\nconst Navigation = () => {\n    \n    const dispatch = useDispatch();\n    //const socket = useSelector(state=> state.socket.socket);\n\n    useEffect(() => {\n      \n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n      <div className='Navigation'>\n        <Navbar />\n        <ToastContainer \n            position=\"top-center\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnVisibilityChange\n            draggable\n            pauseOnHover />\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route exact path='/about' component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Navigation from './components/Navigation';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={window.location.pathname || ''}>\n            <Navigation />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n    rootReducer,\n    undefined /* preloadedState, */,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n document.getElementById('root')\n );\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}